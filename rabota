#include <iostream>
#include <vector>
#include <unordered_map>

std::vector<int> twoSum(std::vector<int>& nums, int target) {
    std::unordered_map<int, int> numToIndex;

    for (int i = 0; i < nums.size(); ++i) {
        int complement = target - nums[i];

        // Проверяем, есть ли такой элемент в хэш-таблице
        if (numToIndex.find(complement) != numToIndex.end()) {
            // Если нашли, то возвращаем индексы
            return { numToIndex[complement], i };
        }

        // Добавляем текущее число и его индекс в хэш-таблицу
        numToIndex[nums[i]] = i;
    }

    // Если не найдено решение, возвращаем пустой вектор
    return {};
}

int main() {
    setlocale(LC_ALL, "ru");
    std::vector<int> nums = { 2, 7, 11, 15 };
    int target = 9;

    std::vector<int> result = twoSum(nums, target);

    if (result.size() == 2) {
        std::cout << "Индексы двух чисел, дающих сумму " << target << ": " << result[0] << " и " << result[1] << std::endl;
    }
    else {
        std::cout << "Решение не найдено." << std::endl;
    }

    return 0;
}
